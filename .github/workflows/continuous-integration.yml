name: Continous Integration

on:
  workflow_call:
    secrets:
      NPM_USER:
        description: 'repository NPM_USER secret passed on'
        required: true
      NPM_PASS:
        description: 'repository NPM_PASS secret passed on'
        required: true
      NPM_EMAIL:
        description: 'repository NPM_EMAIL secret passed on'
        required: true    

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@v3

      - name: Setup node 🏗️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: Get cache 🗄️
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies 🔧
        if: steps.cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          npm install -g npm-cli-login
          npm-cli-login -u ${{ secrets.NPM_USER }} -p ${{ secrets.NPM_PASS }} -e ${{ secrets.NPM_EMAIL }} -r https://registrynpm.storefrontcloud.io
          yarn --frozen-lockfile
            
      - name: Detect circular dependencies 🔄
        uses: vuestorefront/engineering-toolkit/github-actions/circular-dependencies@1.0.3
        with:
          filesPath: 'packages/**/*.{ts,vue}'
          
      - name: Check licenses 🧪
        uses: vuestorefront/engineering-toolkit/github-actions/check-licenses@1.0.9
        with:
          projectPath: ${{ github.workspace }}
   
      - name: Validate pull request title ⚡️
        uses: JulienKode/pull-request-name-linter-action@v0.5.0   

      - name: Build project
        run: yarn build

      - name: Run unit tests
        run: yarn test:unit

      - name: Run integration tests
        run: yarn test:integration

      - name: Lint project
        run: yarn lint

      - name: SonarCloud Scan api-client
        if: ${{ $INPUT_RUN_SONARCLOUD_API_CLIENT }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN_API_CLIENT }}
        with:
          projectBaseDir: packages/api-client
          args: >
            -Dsonar.organization=vuestorefront
            -Dsonar.projectKey=vuestorefront_bigcommerce_api-client
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.coverage.exclusions=__tests__/**,__mocks__/**,*.config.js,src/index.ts,src/api-extractor-data.ts,**/types/**
            -Dsonar.cpd.exclusions=__tests__/**,__mocks__/**

      - name: SonarCloud Scan sdk
        if: ${{ $INPUT_RUN_SONARCLOUD_SDK }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN_SDK }}
        with:
          projectBaseDir: packages/sdk
          args: >
            -Dsonar.organization=vuestorefront
            -Dsonar.projectKey=vuestorefront_bigcommerce_sdk
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.coverage.exclusions=__tests__/**,__mocks__/**,*.config.js,src/index.ts,src/api-extractor-data.ts,**/types/**
            -Dsonar.cpd.exclusions=__tests__/**,__mocks__/**
